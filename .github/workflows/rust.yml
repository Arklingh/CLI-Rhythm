name: Build Executables

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up environment
        run: |
          # Install dependencies or set up the build environment
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get update
            sudo apt-get install -y build-essential cmake
          elif [ "$RUNNER_OS" == "macOS" ]; then
            brew update
            brew install cmake
          elif [ "$RUNNER_OS" == "Windows" ]; then
            choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'
          fi

      - name: Build the project
        run: |
          mkdir build
          cd build
          if [ "$RUNNER_OS" == "Windows" ]; then
            cmake -G "MinGW Makefiles" ..
            mingw32-make
          else
            cmake ..
            make
          fi

      - name: Archive the executable
        run: |
          mkdir -p artifacts
          if [ "$RUNNER_OS" == "Windows" ]; then
            cp my_app.exe artifacts/my_app-${{ matrix.os }}.exe
          else
            cp my_app artifacts/my_app-${{ matrix.os }}
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: my_app-${{ matrix.os }}
          path: artifacts/my_app-${{ matrix.os }}*
